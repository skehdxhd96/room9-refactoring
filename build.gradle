//querydsl 추가
buildscript {
	dependencies {
		classpath("gradle.plugin.com.ewerk.gradle.plugins:querydsl-plugin:1.0.10")
	}
}

plugins {
	id 'org.springframework.boot' version '2.5.0'
	id 'io.spring.dependency-management' version '1.0.11.RELEASE'
	id 'org.asciidoctor.jvm.convert' version '3.3.2'
	id 'java'
}

group = 'com.goomoong'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
	testCompileOnly {
		extendsFrom annotationProcessor
	}
	asciidoctorExtensions
}

apply plugin: "com.ewerk.gradle.plugins.querydsl"

repositories {
	mavenCentral()
}

//Rest Docs dir
ext {
	snippetsDir = file('build/generated-snippets')
}

apply plugin: "io.spring.dependency-management"

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-web'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	testImplementation('org.mockito:mockito-inline:3.4.0')

	/**
	 * Lombok
	 */
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'
	testCompileOnly 'org.projectlombok:lombok'
	testAnnotationProcessor 'org.projectlombok:lombok'

	/**
	 * JPA
	 */
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	runtimeOnly 'com.h2database:h2' //h2 DB
	runtimeOnly 'mysql:mysql-connector-java' //MySQL

	/**
	 * Query DSL
	 */
	implementation 'com.querydsl:querydsl-jpa'
	implementation 'com.querydsl:querydsl-apt'

	/**
	 * JWT Dependencies
	 */
	implementation 'io.jsonwebtoken:jjwt-api:0.11.1'
	implementation 'io.jsonwebtoken:jjwt-impl:0.11.1', 'io.jsonwebtoken:jjwt-jackson:0.11.1'

	/**
	 * RestDoc
	 */
	testImplementation 'org.springframework.restdocs:spring-restdocs-mockmvc' //mockmvc 를 restdocs 에 사용하게 돕는 라이브러리
	asciidoctorExtensions 'org.springframework.restdocs:spring-restdocs-asciidoctor'

	/**
	 * AWS
	 */
	implementation group: 'org.springframework.cloud', name: 'spring-cloud-starter-aws', version: '2.2.6.RELEASE'
	implementation platform('software.amazon.awssdk:bom:2.13.33')
	implementation 'software.amazon.awssdk:s3'

	/**
	 * s3 folder
	 */
	annotationProcessor "org.springframework.boot:spring-boot-configuration-processor"

	asciidoctorExtensions 'org.springframework.restdocs:spring-restdocs-asciidoctor'
	implementation 'com.fasterxml.jackson.core:jackson-databind:2.12.3'
}

//querydsl 추가
def querydslDir = "$buildDir/generated/querydsl"

test {
	useJUnitPlatform()
	outputs.dir snippetsDir
}

querydsl {
	library = "com.querydsl:querydsl-apt"
	jpa = true
	querydslSourcesDir = querydslDir
}

sourceSets {
	main {
		java {
			srcDirs = ['src/main/java', querydslDir]
		}
	}
}

compileQuerydsl{
	options.annotationProcessorPath = configurations.querydsl
}

configurations {
	querydsl.extendsFrom compileClasspath
}

/***********
 * REST Docs
 ***********/
asciidoctor {
	configurations 'asciidoctorExtensions'
	inputs.dir snippetsDir
	dependsOn test
}

bootJar {
	dependsOn asciidoctor
	duplicatesStrategy(DuplicatesStrategy.INCLUDE)
	from("${asciidoctor.outputDir}") {
		into "BOOT-INF/classes/static/docs"
	}
}

task copyDocument(type: Copy) {
	dependsOn asciidoctor
	from file("build/docs/asciidoc")
	into file("src/main/resources/static/docs")
}

build {
	dependsOn copyDocument

}

